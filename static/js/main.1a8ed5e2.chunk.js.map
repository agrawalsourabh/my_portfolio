{"version":3,"sources":["components/Navigation.js","components/Home.js","components/About.js","components/Work.js","components/Contact.js","containers/App.js","serviceWorker.js","index.js"],"names":["Navigation","class","to","title","React","Component","Home","className","src","process","alt","About","Work","Contact","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oYA+BeA,E,uKAzBb,OACC,oCACC,4BAAQC,MAAM,6CACZ,yBAAKA,MAAM,sBACV,4BACC,kBAAC,IAAD,CAAMC,GAAG,KACP,wBAAID,MAAM,yBAA0BE,MAAM,QAA1C,SAED,kBAAC,IAAD,CAAMD,GAAG,UACR,wBAAID,MAAM,yBAA0BE,MAAM,SAA1C,UAED,kBAAC,IAAD,CAAMD,GAAG,SACR,wBAAID,MAAM,yBAA0BE,MAAM,QAA1C,SAED,kBAAC,IAAD,CAAMD,GAAG,YACR,wBAAID,MAAM,qBAAsBE,MAAM,WAAtC,oB,GAjBeC,IAAMC,WCiBhBC,G,6KAhBb,OACC,yBAAKC,UAAU,gBACd,6BAASN,MAAM,iBACb,6BAASA,MAAM,iDACb,yBAAKO,IAAKC,gCAA6CR,MAAM,KAAKS,IAAI,6BACtE,yBAAKT,MAAM,sBACT,uBAAGA,MAAM,0BAAT,oBACA,uBAAGA,MAAM,qBAAT,wC,GATSG,IAAMC,YCuBVM,G,6KArBb,OACC,yBAAKJ,UAAU,SACd,0CACA,6BACA,yBAAKA,UAAU,aACd,yBAAKC,IAAKC,sCAAmDR,MAAM,KAAKS,IAAI,6BAE5E,yBAAKH,UAAU,aACd,oCAAS,gDAAT,mBAAsD,qDAAtD,oBACkB,2CADlB,wBAGA,yCACY,8CADZ,cACkD,mDADlD,yB,GAbcH,IAAMC,YCUXO,G,6KARb,OACC,yBAAKL,UAAU,QACd,4C,GAJeH,IAAMC,YCUVQ,G,6KARb,OACC,yBAAKN,UAAU,WACd,8C,GAJkBH,IAAMC,Y,OCyBbS,MAlBf,WACE,OAEE,kBAAC,IAAD,KACE,kBAAE,EAAF,MACA,yBAAKP,UAAU,aACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOQ,KAAK,IAAIC,OAAK,EAACC,UAAWX,IACjC,kBAAC,IAAD,CAAOS,KAAK,SAASE,UAAWN,IAChC,kBAAC,IAAD,CAAOI,KAAK,QAAQE,UAAWL,IAC/B,kBAAC,IAAD,CAAOG,KAAK,WAAWE,UAAWJ,Q,MCR1BK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1a8ed5e2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Navigation.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navigation extends React.Component{\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<header class=\"tr fixed w-100 ph3 pv3 pv4-ns ph4-m ph5-l\">\r\n\t\t\t\t  <nav class=\"f6 fw6 ttu tracked\">\r\n\t\t\t\t  \t<ul>\r\n\t\t\t\t  \t\t<Link to='/'>\r\n\t\t\t\t\t    \t<li class=\"link dim white dib mr3\"  title=\"Home\">Home</li>\r\n\t\t\t\t\t    </Link>\r\n\t\t\t\t\t    <Link to='/about'>\r\n\t\t\t\t\t    \t<li class=\"link dim white dib mr3\"  title=\"About\">About</li>\r\n\t\t\t\t\t    </Link>\r\n\t\t\t\t\t    <Link to='/work'>\r\n\t\t\t\t\t    \t<li class=\"link dim white dib mr3\"  title=\"Work\">Work</li>\r\n\t\t\t\t\t    </Link>\r\n\t\t\t\t\t    <Link to='/contact'>\r\n\t\t\t\t\t    \t<li class=\"link dim white dib\"  title=\"Contact\">Contact</li>\r\n\t\t\t\t\t    </Link>\r\n\t\t\t\t    </ul>\r\n\t\t\t\t  </nav>\r\n\t\t\t\t</header>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport './Home.css'\r\n\r\nclass Home extends React.Component {\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div className='introduction'>\r\n\t\t\t\t<section class=\"tc pa3 pa5-ns\">\r\n\t\t\t\t  <article class=\"hide-child relative ba b--black-20 mw5 center\">\r\n\t\t\t\t    <img src={process.env.PUBLIC_URL + '/img/profile.jpg'} class=\"db\" alt=\"Photo of Sourabh Agrawal\" />\r\n\t\t\t\t    <div class=\"pa2 bt b--black-20\">\r\n\t\t\t\t      <p class=\"f3 link dark-blue name\" >Sourabh Agrawal.</p>\r\n\t\t\t\t      <p class=\"f6 gray mv1 intro\">I design things for the web.</p>\r\n\t\t\t\t     </div>\r\n\t\t\t\t    </article>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport './About.css'\r\n\r\nclass About extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className='about'>\r\n\t\t\t\t<h1> About Me </h1>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div className='about-sec'>\r\n\t\t\t\t\t<img src={process.env.PUBLIC_URL + '/img/web-developer.svg'} class=\"db\" alt=\"Photo of Sourabh Agrawal\" />\r\n\r\n\t\t\t\t\t<div className='about-txt'>\r\n\t\t\t\t\t\t<p> I am <strong> passionate </strong> about creating <strong> web experiences </strong>\r\n\t\t\t\t\t\t\tthat improve the <strong> lives </strong> of those around me.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tI focus on <strong> crafting </strong> clean and <strong> user-friendly </strong> expericences.\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './Work.css'\r\n\r\nclass Work extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className='work'>\r\n\t\t\t\t<h2> Work! </h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Work;","import React from 'react'\r\nimport './Contact.css'\r\n\r\nclass Contact extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className='contact'>\r\n\t\t\t\t<h2> Contact </h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Contact","import React from 'react';\r\nimport './App.css';\r\nimport Navigation from '../components/Navigation'\r\nimport Home from '../components/Home'\r\nimport About from '../components/About'\r\nimport Work from '../components/Work'\r\nimport Contact from '../components/Contact'\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n    <Router>\r\n      < Navigation/>\r\n      <div className='container'>\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home}/>\r\n            <Route path=\"/about\" component={About}/>\r\n            <Route path=\"/work\" component={Work}/>\r\n            <Route path=\"/contact\" component={Contact}/>\r\n          </Switch>\r\n      </div>\r\n    </Router>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport 'tachyons';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}